########## torch.float32/torch.int32/batch_shape=()/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([0, 2, 4]),
       row_indices=tensor([0, 1, 0, 2]),
       values=tensor([1., 2., 3., 4.]), size=(3, 2), nnz=4,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([0, 2, 4], dtype=torch.int32)
# _row_indices
tensor([0, 1, 0, 2], dtype=torch.int32)
# _values
tensor([1., 2., 3., 4.])

########## torch.float32/torch.int32/batch_shape=()/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([0]),
       row_indices=tensor([], size=(0,)),
       values=tensor([], size=(0,)), size=(0, 0), nnz=0,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([0], dtype=torch.int32)
# _row_indices
tensor([], dtype=torch.int32)
# _values
tensor([])

########## torch.float32/torch.int32/batch_shape=(2,)/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([[0, 2, 4],
                            [0, 3, 4]]),
       row_indices=tensor([[0, 1, 0, 1],
                           [0, 1, 2, 0]]),
       values=tensor([[1., 2., 3., 4.],
                      [5., 6., 7., 8.]]), size=(2, 3, 2), nnz=4,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([[0, 2, 4],
        [0, 3, 4]], dtype=torch.int32)
# _row_indices
tensor([[0, 1, 0, 1],
        [0, 1, 2, 0]], dtype=torch.int32)
# _values
tensor([[1., 2., 3., 4.],
        [5., 6., 7., 8.]])

########## torch.float32/torch.int32/batch_shape=(2, 3)/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([[[0, 2, 4],
                             [0, 3, 4],
                             [0, 1, 4]],

                            [[0, 1, 4],
                             [0, 2, 4],
                             [0, 3, 4]]]),
       row_indices=tensor([[[0, 1, 0, 1],
                            [0, 1, 2, 0],
                            [0, 0, 1, 2]],

                           [[1, 0, 1, 2],
                            [0, 2, 0, 1],
                            [0, 1, 2, 1]]]),
       values=tensor([[[ 1.,  2.,  3.,  4.],
                       [ 5.,  6.,  7.,  8.],
                       [ 9., 10., 11., 12.]],

                      [[13., 14., 15., 16.],
                       [17., 18., 19., 20.],
                       [21., 22., 23., 24.]]]), size=(2, 3, 3, 2), nnz=4,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([[[0, 2, 4],
         [0, 3, 4],
         [0, 1, 4]],

        [[0, 1, 4],
         [0, 2, 4],
         [0, 3, 4]]], dtype=torch.int32)
# _row_indices
tensor([[[0, 1, 0, 1],
         [0, 1, 2, 0],
         [0, 0, 1, 2]],

        [[1, 0, 1, 2],
         [0, 2, 0, 1],
         [0, 1, 2, 1]]], dtype=torch.int32)
# _values
tensor([[[ 1.,  2.,  3.,  4.],
         [ 5.,  6.,  7.,  8.],
         [ 9., 10., 11., 12.]],

        [[13., 14., 15., 16.],
         [17., 18., 19., 20.],
         [21., 22., 23., 24.]]])


########## torch.float64/torch.int32/batch_shape=()/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([0, 2, 4]),
       row_indices=tensor([0, 1, 0, 2]),
       values=tensor([1., 2., 3., 4.]), size=(3, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csc)
# _ccol_indices
tensor([0, 2, 4], dtype=torch.int32)
# _row_indices
tensor([0, 1, 0, 2], dtype=torch.int32)
# _values
tensor([1., 2., 3., 4.], dtype=torch.float64)

########## torch.float64/torch.int32/batch_shape=()/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([0]),
       row_indices=tensor([], size=(0,)),
       values=tensor([], size=(0,)), size=(0, 0), nnz=0, dtype=torch.float64,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([0], dtype=torch.int32)
# _row_indices
tensor([], dtype=torch.int32)
# _values
tensor([], dtype=torch.float64)

########## torch.float64/torch.int32/batch_shape=(2,)/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([[0, 2, 4],
                            [0, 3, 4]]),
       row_indices=tensor([[0, 1, 0, 1],
                           [0, 1, 2, 0]]),
       values=tensor([[1., 2., 3., 4.],
                      [5., 6., 7., 8.]]), size=(2, 3, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csc)
# _ccol_indices
tensor([[0, 2, 4],
        [0, 3, 4]], dtype=torch.int32)
# _row_indices
tensor([[0, 1, 0, 1],
        [0, 1, 2, 0]], dtype=torch.int32)
# _values
tensor([[1., 2., 3., 4.],
        [5., 6., 7., 8.]], dtype=torch.float64)

########## torch.float64/torch.int32/batch_shape=(2, 3)/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([[[0, 2, 4],
                             [0, 3, 4],
                             [0, 1, 4]],

                            [[0, 1, 4],
                             [0, 2, 4],
                             [0, 3, 4]]]),
       row_indices=tensor([[[0, 1, 0, 1],
                            [0, 1, 2, 0],
                            [0, 0, 1, 2]],

                           [[1, 0, 1, 2],
                            [0, 2, 0, 1],
                            [0, 1, 2, 1]]]),
       values=tensor([[[ 1.,  2.,  3.,  4.],
                       [ 5.,  6.,  7.,  8.],
                       [ 9., 10., 11., 12.]],

                      [[13., 14., 15., 16.],
                       [17., 18., 19., 20.],
                       [21., 22., 23., 24.]]]), size=(2, 3, 3, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csc)
# _ccol_indices
tensor([[[0, 2, 4],
         [0, 3, 4],
         [0, 1, 4]],

        [[0, 1, 4],
         [0, 2, 4],
         [0, 3, 4]]], dtype=torch.int32)
# _row_indices
tensor([[[0, 1, 0, 1],
         [0, 1, 2, 0],
         [0, 0, 1, 2]],

        [[1, 0, 1, 2],
         [0, 2, 0, 1],
         [0, 1, 2, 1]]], dtype=torch.int32)
# _values
tensor([[[ 1.,  2.,  3.,  4.],
         [ 5.,  6.,  7.,  8.],
         [ 9., 10., 11., 12.]],

        [[13., 14., 15., 16.],
         [17., 18., 19., 20.],
         [21., 22., 23., 24.]]], dtype=torch.float64)


########## torch.float32/torch.int64/batch_shape=()/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([0, 2, 4]),
       row_indices=tensor([0, 1, 0, 2]),
       values=tensor([1., 2., 3., 4.]), size=(3, 2), nnz=4,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([0, 2, 4])
# _row_indices
tensor([0, 1, 0, 2])
# _values
tensor([1., 2., 3., 4.])

########## torch.float32/torch.int64/batch_shape=()/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([0]),
       row_indices=tensor([], size=(0,)),
       values=tensor([], size=(0,)), size=(0, 0), nnz=0,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([0])
# _row_indices
tensor([], dtype=torch.int64)
# _values
tensor([])

########## torch.float32/torch.int64/batch_shape=(2,)/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([[0, 2, 4],
                            [0, 3, 4]]),
       row_indices=tensor([[0, 1, 0, 1],
                           [0, 1, 2, 0]]),
       values=tensor([[1., 2., 3., 4.],
                      [5., 6., 7., 8.]]), size=(2, 3, 2), nnz=4,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([[0, 2, 4],
        [0, 3, 4]])
# _row_indices
tensor([[0, 1, 0, 1],
        [0, 1, 2, 0]])
# _values
tensor([[1., 2., 3., 4.],
        [5., 6., 7., 8.]])

########## torch.float32/torch.int64/batch_shape=(2, 3)/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([[[0, 2, 4],
                             [0, 3, 4],
                             [0, 1, 4]],

                            [[0, 1, 4],
                             [0, 2, 4],
                             [0, 3, 4]]]),
       row_indices=tensor([[[0, 1, 0, 1],
                            [0, 1, 2, 0],
                            [0, 0, 1, 2]],

                           [[1, 0, 1, 2],
                            [0, 2, 0, 1],
                            [0, 1, 2, 1]]]),
       values=tensor([[[ 1.,  2.,  3.,  4.],
                       [ 5.,  6.,  7.,  8.],
                       [ 9., 10., 11., 12.]],

                      [[13., 14., 15., 16.],
                       [17., 18., 19., 20.],
                       [21., 22., 23., 24.]]]), size=(2, 3, 3, 2), nnz=4,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([[[0, 2, 4],
         [0, 3, 4],
         [0, 1, 4]],

        [[0, 1, 4],
         [0, 2, 4],
         [0, 3, 4]]])
# _row_indices
tensor([[[0, 1, 0, 1],
         [0, 1, 2, 0],
         [0, 0, 1, 2]],

        [[1, 0, 1, 2],
         [0, 2, 0, 1],
         [0, 1, 2, 1]]])
# _values
tensor([[[ 1.,  2.,  3.,  4.],
         [ 5.,  6.,  7.,  8.],
         [ 9., 10., 11., 12.]],

        [[13., 14., 15., 16.],
         [17., 18., 19., 20.],
         [21., 22., 23., 24.]]])


########## torch.float64/torch.int64/batch_shape=()/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([0, 2, 4]),
       row_indices=tensor([0, 1, 0, 2]),
       values=tensor([1., 2., 3., 4.]), size=(3, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csc)
# _ccol_indices
tensor([0, 2, 4])
# _row_indices
tensor([0, 1, 0, 2])
# _values
tensor([1., 2., 3., 4.], dtype=torch.float64)

########## torch.float64/torch.int64/batch_shape=()/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([0]),
       row_indices=tensor([], size=(0,)),
       values=tensor([], size=(0,)), size=(0, 0), nnz=0, dtype=torch.float64,
       layout=torch.sparse_csc)
# _ccol_indices
tensor([0])
# _row_indices
tensor([], dtype=torch.int64)
# _values
tensor([], dtype=torch.float64)

########## torch.float64/torch.int64/batch_shape=(2,)/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([[0, 2, 4],
                            [0, 3, 4]]),
       row_indices=tensor([[0, 1, 0, 1],
                           [0, 1, 2, 0]]),
       values=tensor([[1., 2., 3., 4.],
                      [5., 6., 7., 8.]]), size=(2, 3, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csc)
# _ccol_indices
tensor([[0, 2, 4],
        [0, 3, 4]])
# _row_indices
tensor([[0, 1, 0, 1],
        [0, 1, 2, 0]])
# _values
tensor([[1., 2., 3., 4.],
        [5., 6., 7., 8.]], dtype=torch.float64)

########## torch.float64/torch.int64/batch_shape=(2, 3)/block_shape=() ##########
# sparse tensor
tensor(ccol_indices=tensor([[[0, 2, 4],
                             [0, 3, 4],
                             [0, 1, 4]],

                            [[0, 1, 4],
                             [0, 2, 4],
                             [0, 3, 4]]]),
       row_indices=tensor([[[0, 1, 0, 1],
                            [0, 1, 2, 0],
                            [0, 0, 1, 2]],

                           [[1, 0, 1, 2],
                            [0, 2, 0, 1],
                            [0, 1, 2, 1]]]),
       values=tensor([[[ 1.,  2.,  3.,  4.],
                       [ 5.,  6.,  7.,  8.],
                       [ 9., 10., 11., 12.]],

                      [[13., 14., 15., 16.],
                       [17., 18., 19., 20.],
                       [21., 22., 23., 24.]]]), size=(2, 3, 3, 2), nnz=4,
       dtype=torch.float64, layout=torch.sparse_csc)
# _ccol_indices
tensor([[[0, 2, 4],
         [0, 3, 4],
         [0, 1, 4]],

        [[0, 1, 4],
         [0, 2, 4],
         [0, 3, 4]]])
# _row_indices
tensor([[[0, 1, 0, 1],
         [0, 1, 2, 0],
         [0, 0, 1, 2]],

        [[1, 0, 1, 2],
         [0, 2, 0, 1],
         [0, 1, 2, 1]]])
# _values
tensor([[[ 1.,  2.,  3.,  4.],
         [ 5.,  6.,  7.,  8.],
         [ 9., 10., 11., 12.]],

        [[13., 14., 15., 16.],
         [17., 18., 19., 20.],
         [21., 22., 23., 24.]]], dtype=torch.float64)

